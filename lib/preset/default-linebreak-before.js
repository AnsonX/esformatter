module.exports = {
  "lineBreak" : {
    "before" : {
      "AssignmentExpression" : ">=1",
      "AssignmentOperator": 0,
      "AssignmentPattern" : 0,
      "ArrayPatternOpening": 0,
      "ArrayPatternClosing": 0,
      "ArrayPatternComma": 0,
      "ArrowFunctionExpressionArrow": 0,
      "ArrowFunctionExpressionOpeningBrace": 0,
      "ArrowFunctionExpressionClosingBrace": ">=1",
      "BlockStatementClosingBrace" : ">=1",
      "BlockStatementOpeningBrace" : ">=1",
      "BreakKeyword": ">=1",
      "CallExpression" : -1,
      "CallExpressionOpeningParentheses" : 0,
      "CallExpressionClosingParentheses" : -1,
      "ClassDeclaration" : ">=1",
      "ClassExpression" : ">=1",
      "ClassOpeningBrace" : 0,
      "ClassClosingBrace" : ">=1",
      "ConditionalExpression" : ">=1",
      "CatchOpeningBrace" : 0,
      "CatchClosingBrace" : ">=1",
      "CatchKeyword": 0,
      "DeleteOperator" : ">=1",
      "DoWhileStatement" : ">=1",
      "DoWhileStatementOpeningBrace" : 0,
      "DoWhileStatementClosingBrace" : ">=1",
      "EndOfFile" : -1,
      "EmptyStatement" : -1,
      "ExportAllDeclaration": ">=1",
      "ExportDefaultDeclaration": ">=1",
      "ExportNamedDeclaration": ">=1",
      "FinallyKeyword" : -1,
      "FinallyOpeningBrace" : 0,
      "FinallyClosingBrace" : ">=1",
      "ForInStatement" : ">=1",
      "ForInStatementExpressionOpening" : 0,
      "ForInStatementExpressionClosing" : 0,
      "ForInStatementOpeningBrace" : 0,
      "ForInStatementClosingBrace" : ">=1",
      "ForOfStatement" : ">=1",
      "ForOfStatementExpressionOpening" : 0,
      "ForOfStatementExpressionClosing" : 0,
      "ForOfStatementOpeningBrace" : 0,
      "ForOfStatementClosingBrace" : ">=1",
      "ForStatement" : ">=1",
      "ForStatementExpressionOpening" : 0,
      "ForStatementExpressionClosing" : "<2",
      "ForStatementOpeningBrace" : 0,
      "ForStatementClosingBrace" : ">=1",
      "FunctionExpression" : -1,
      "FunctionExpressionOpeningBrace" : 0,
      "FunctionExpressionClosingBrace" : ">=1",
      "FunctionDeclaration" : ">=1",
      "FunctionDeclarationOpeningBrace" : 0,
      "FunctionDeclarationClosingBrace" : ">=1",
      "IIFEClosingParentheses" : 0,
      "IfStatement" : ">=1",
      "IfStatementOpeningBrace" : 0,
      "IfStatementClosingBrace" : ">=1",
      "ElseIfStatement" : 0,
      "ElseIfStatementOpeningBrace" : 0,
      "ElseIfStatementClosingBrace" : ">=1",
      "ElseStatement" : 0,
      "ElseStatementOpeningBrace" : 0,
      "ElseStatementClosingBrace" : ">=1",
      "LogicalExpression" : -1,
      "MethodDefinition": ">=1",
      "MemberExpressionOpening": 0,
      "MemberExpressionClosing": "<2",
      "MemberExpressionPeriod": -1,
      "ObjectExpressionClosingBrace" : ">=1",
      "ObjectPatternOpeningBrace": 0,
      "ObjectPatternClosingBrace": 0,
      "ObjectPatternComma": 0,
      "Property" : ">=1",
      "PropertyValue" : 0,
      "ReturnStatement" : -1,
      "SwitchOpeningBrace" : 0,
      "SwitchClosingBrace" : ">=1",
      "SwitchCaseBlockEnd": ">=1",
      "SwitchCaseBlockStart": 0,
      "SwitchCaseColon": 0,
      "ThisExpression" : -1,
      "ThrowStatement" : ">=1",
      "TryKeyword": -1,
      "TryOpeningBrace" : 0,
      "TryClosingBrace" : ">=1",
      "VariableName" : ">=1",
      "VariableValue" : 0,
      "VariableDeclaration" : ">=1",
      "VariableDeclarationSemiColon" : 0,
      "VariableDeclarationWithoutInit" : ">=1",
      "WhileStatement" : ">=1",
      "WhileStatementOpeningBrace" : 0,
      "WhileStatementClosingBrace" : ">=1"
    }
  }
};
